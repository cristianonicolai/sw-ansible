#Job Templates_job_templates_launch_create
#quarkus.openapi-generator.codegen.validateSpec=false
#quarkus.openapi-generator.codegen.verbose=true
#org.kie.kogito.openapi.ansibletravelshealth.api.MicroProfileHealthApi/microprofileHealthRoot/CircuitBreaker/enabled=true
#org.kie.kogito.openapi.ansibletravelshealth.api.MicroProfileHealthApi/microprofileHealthRoot/CircuitBreaker/retryOn=org.apache.http.NoHttpResponseException
#org.kie.kogito.openapi.ansibletravelshealth.api.MicroProfileHealthApi/microprofileHealthRoot/CircuitBreaker/failOn=java.lang.IllegalArgumentException,java.lang.NullPointerException
#org.kie.kogito.openapi.ansibletravelshealth.api.MicroProfileHealthApi/microprofileHealthRoot/CircuitBreaker/skipOn=java.lang.NumberFormatException
#org.kie.kogito.openapi.ansibletravelshealth.api.MicroProfileHealthApi/microprofileHealthRoot/CircuitBreaker/delay=500
#org.kie.kogito.openapi.ansibletravelshealth.api.MicroProfileHealthApi/microprofileHealthRoot/CircuitBreaker/delayUnit=MILLIS
#org.kie.kogito.openapi.ansibletravelshealth.api.MicroProfileHealthApi/microprofileHealthRoot/CircuitBreaker/maxRetries=100

#org.kie.kogito.openapi.ansibletravelshealth.api.MicroProfileHealthApi/microprofileHealthRoot/CircuitBreaker/requestVolumeThreshold=42
#org.kie.kogito.openapi.ansibletravelshealth.api.MicroProfileHealthApi/microprofileHealthRoot/CircuitBreaker/failureRatio=3.14
#org.kie.kogito.openapi.ansibletravelshealth.api.MicroProfileHealthApi/microprofileHealthRoot/CircuitBreaker/successThreshold=22

quarkus.openapi-generator.ansible_triggerAnsible.auth.basic.username=awx
quarkus.openapi-generator.ansible_triggerAnsible.auth.basic.password=awx
quarkus.rest-client.ansible_triggerAnsible.url=http://localhost:8013/
quarkus.rest-client.ansible_travelsHealth.url=http://localhost:9080/
kogito.sw.operationIdStrategy=function_name

quarkus.kogito.logger.always-include=true
quarkus.http.port=8280
quarkus.http.host=0.0.0.0

#quarkus.kogito.devservices.enabled=false

mp.messaging.outgoing.tower-send.connector=smallrye-kafka
mp.messaging.outgoing.tower-send.topic=tower
#mp.messaging.outgoing.tower-send.cloud-events-mode=structured
#mp.messaging.outgoing.tower-send.cloud-events-type=ansible-tower
mp.messaging.outgoing.tower-send.group.id=kogito-sw-ansible

mp.messaging.incoming.kogito_incoming_stream.connector=smallrye-kafka
mp.messaging.incoming.kogito_incoming_stream.topic=tower
mp.messaging.incoming.kogito_incoming_stream.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.kogito_incoming_stream.group.id=kogito-sw-ansible

quarkus.log.category."org.apache.http".level=DEBUG